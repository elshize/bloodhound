function(add_unit_test TEST_NAME)
    set(LONG_NAME "unit_test_${TEST_NAME}")
    add_executable(${LONG_NAME} "${LONG_NAME}.cpp")
    target_link_libraries(${LONG_NAME} irkit GTest::GTest)
    target_compile_features(${LONG_NAME} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
    gtest_add_tests(TARGET ${LONG_NAME} TEST_PREFIX "unit.")
endfunction()

function(add_catch2_unit_test TEST_NAME)
    set(LONG_NAME "unit_test_${TEST_NAME}")
    add_executable(${LONG_NAME} "${LONG_NAME}.cpp")
    target_link_libraries(${LONG_NAME} irkit Catch2::Catch2)
    target_compile_features(${LONG_NAME} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
    catch_discover_tests(${LONG_NAME})
endfunction()

set(VECTOR_INVERTED_LISTS vector_inverted_lists)
add_executable(${VECTOR_INVERTED_LISTS} unit_test_vector_inverted_lists.cpp)
target_link_libraries(${VECTOR_INVERTED_LISTS} irkit CONAN_PKG::gtest)
target_compile_features(${VECTOR_INVERTED_LISTS} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${VECTOR_INVERTED_LISTS} TEST_PREFIX "unit.")

set(POSTING_LIST posting_list)
add_executable(${POSTING_LIST} unit_test_posting_list.cpp)
target_link_libraries(${POSTING_LIST} irkit CONAN_PKG::gtest)
target_compile_features(${POSTING_LIST} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${POSTING_LIST} TEST_PREFIX "unit.")

set(COMPACT_TABLE compact_table)
add_executable(${COMPACT_TABLE} unit_test_compact_table.cpp)
target_link_libraries(${COMPACT_TABLE} irkit CONAN_PKG::gtest)
target_compile_features(${COMPACT_TABLE} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${COMPACT_TABLE} TEST_PREFIX "unit.")

set(NUMERIC_CODEC numeric_codec)
add_executable(${NUMERIC_CODEC} unit_test_numeric_codec.cpp)
target_link_libraries(${NUMERIC_CODEC} irkit CONAN_PKG::gtest)
target_compile_features(${NUMERIC_CODEC} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${NUMERIC_CODEC} TEST_PREFIX "unit.")

set(STEMMER stemmer)
add_executable(${STEMMER} unit_test_stemmer.cpp)
target_link_libraries(${STEMMER} irkit CONAN_PKG::gtest)
target_compile_features(${STEMMER} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${STEMMER} TEST_PREFIX "unit.")

set(REORDER unit_test_reorder)
add_executable(${REORDER} "${REORDER}.cpp")
target_link_libraries(${REORDER} irkit CONAN_PKG::gtest)
target_compile_features(${REORDER} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${REORDER} TEST_PREFIX "unit.")

set(PARTITION unit_test_partition)
add_executable(${PARTITION} "${PARTITION}.cpp")
target_link_libraries(${PARTITION} irkit CONAN_PKG::gtest)
target_compile_features(${PARTITION} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${PARTITION} TEST_PREFIX "unit.")

set(THRESHOLD unit_test_threshold)
add_executable(${THRESHOLD} "${THRESHOLD}.cpp")
target_link_libraries(${THRESHOLD} irkit CONAN_PKG::gtest)
target_compile_features(${THRESHOLD} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${THRESHOLD} TEST_PREFIX "unit.")

set(ALGORITHM unit_test_algorithm)
add_executable(${ALGORITHM} "${ALGORITHM}.cpp")
target_link_libraries(${ALGORITHM} irkit CONAN_PKG::gtest)
target_compile_features(${ALGORITHM} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${ALGORITHM} TEST_PREFIX "unit.")

set(QUANTIZE unit_test_quantize)
add_executable(${QUANTIZE} "${QUANTIZE}.cpp")
target_link_libraries(${QUANTIZE} irkit CONAN_PKG::gtest)
target_compile_features(${QUANTIZE} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${QUANTIZE} TEST_PREFIX "unit.")

set(PROPERTIES unit_test_index_properties)
add_executable(${PROPERTIES} "${PROPERTIES}.cpp")
target_link_libraries(${PROPERTIES} irkit CONAN_PKG::gtest)
target_compile_features(${PROPERTIES} PRIVATE ${IRKit_CXX_PRIVATE_FEATURES})
gtest_add_tests(TARGET ${PROPERTIES} TEST_PREFIX "unit.")

add_unit_test(timer)
add_catch2_unit_test(merger)
add_catch2_unit_test(scorestats)
