language: cpp
env:
  global:
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
cache:
  directories:
    - ${DEPS_DIR}/llvm
matrix:
  include:
    - os: linux
      env:
        - MATRIX_EVAL="SUITE=unit && CC=gcc-7 && CXX=g++-7"
    - os: linux
      env:
        - MATRIX_EVAL="SUITE=integration && CC=gcc-7 && CXX=g++-7"
    - os: linux
      env:
        - MATRIX_EVAL="SUITE=benchmarks && CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - libboost-all-dev
            - g++-7
      env:
        - MATRIX_EVAL="SUITE=unit && CC=clang-6.0 && CXX=clang++-6.0"
    - os: linux
      env:
        - vera++
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - lua5.1
            - liblua5.1
            - libluabind-dev
            - libtcl8.6
            - tcl-dev
            - libboost-all-dev
      install:
        - git clone https://bitbucket.org/verateam/vera.git
        - cd vera
        - mkdir build
        - cd build
        - cmake -D VERA_USE_SYSTEM_BOOST:BOOL=ON ..
        - make
        - sudo make install
        - cd ../../
      script:
        - scripts/vera.sh
before_install:
  - eval "${MATRIX_EVAL}"
  - |
    # Install libc++ (if clang)
    if [[ $CXX = *"clang"* ]]; then
      LLVM_VERSION=6.0.1
      LLVM_DIR=${DEPS_DIR}/llvm/llvm-${LLVM_VERSION}
      if [ ! -f ${LLVM_DIR}/cached ]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
        (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=${CXX} -DCMAKE_BUILD_TYPE=Release)
        (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
        (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
        touch ${LLVM_DIR}/cached
      fi
      export CXXFLAGS="${CXXFLAGS} -stdlib=libc++ -nostdinc++ -I${LLVM_DIR}/install/include/c++/v1 -Wno-unused-command-line-argument"
      export LDFLAGS="${LDFLAGS} -L${LLVM_DIR}/install/lib -Wl,-rpath,${LLVM_DIR}/install/lib"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
    fi
  - |
    # Install conan
    export PATH=$HOME/.local/bin:$PATH
    pip install --user conan
    conan profile new default --detect
    conan profile update settings.compiler.libcxx=libstdc++11 default
    if [[ $CXX = *"clang"* ]]; then
        conan profile update env.CC=clang-6.0 default
        conan profile update env.CXX=clang++-6.0 default
        conan profile update settings.compiler.libcxx=libc++ default
    fi
    conan remote add irkit https://api.bintray.com/conan/elshize/irkit
    conan remote add conan-community https://api.bintray.com/conan/conan-community/conan
    conan remote add cliutils https://api.bintray.com/conan/cliutils/CLI11
    conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan
    conan remote add manu https://api.bintray.com/conan/manu343726/conan-packages
  - |
    # Install cmake 3.11
    pip install --user cmake
  - |
    # Print environment
    which $CXX
    which $CC
    $CXX --version
    which cmake
    cmake --version
    conan --version
    conan profile show default
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libboost-all-dev
install:
  - |
    # Configure project
    cd ${TRAVIS_BUILD_DIR}
    mkdir build && cd build
    conan install .. --build=missing --build=fmt -s use_system_boost=True
script:
  - cd ${TRAVIS_BUILD_DIR}
  - scripts/run-tests.sh "${SUITE}"
